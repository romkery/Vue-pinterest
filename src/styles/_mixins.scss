@use 'sass:math';
@import 'variables';

@mixin adaptive_font($pcSize, $mobSize) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media (max-width: em(767)) {
    font-size: calc(#{ rem($mobSize) } + #{ $addMobSize } * ((100vw - 150px) / #{ $maxWidth }));
  }

  @media (min-width: em(767)) {
    font-size: calc(#{rem($mobSize)} + #{$addSize} * (100vw / #{$maxWidth}));
  }

}

@mixin adaptive_size($pcSize, $mobSize, $prop) {
  $addSize: $pcSize - $mobSize;
  $addMobSize: $addSize + $addSize * 0.7;

  @media (max-width: em(767)) {
    $prop: calc(#{ rem($mobSize) } + #{ $addMobSize } * ((100vw - 150px) / #{ $maxWidth }));
  }

  @media (min-width: em(767)) {
    $prop: calc(#{rem($mobSize)} + #{$addSize} * (100vw / #{$maxWidth}));
  }

}

@function rem($pixels) {

  @if (math.is-unitless($pixels)) {
    @return math.div($pixels, 16) + rem;
  } @else {
    @error "Need unitless number";
  }
}

@function em($pixels) {

  @if (math.is-unitless($pixels)) {
    @return math.div($pixels, 16) + em;
  } @else {
    @error "Need unitless number";
  }
}

